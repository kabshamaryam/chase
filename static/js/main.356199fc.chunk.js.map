{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","onChange","type","placeholder","Card","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAeeA,EAbG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKC,UAAU,MAAf,SACA,uBACAC,SAAUF,EACVC,UAAU,mCACVE,KAAK,SACLC,YAAY,qBCOLC,EAdH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACrB,OACI,sBAAKP,UAAU,gDAAf,UACI,qBACCA,UAAU,MACVQ,IAAI,SACJC,IAAG,gCAA2BF,EAA3B,mBAEJ,6BAAKF,IACL,6BAAKC,QCQFI,EAhBC,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACd,OACI,qBAAKX,UAAU,GAAf,SACIW,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CACIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHVQ,SCEhBC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAWC,OAAQ,kBAAmBC,OAAO,SAApE,SACCJ,EAAMK,YCgBAC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACJ,4EAEHG,KAAKX,MAAMK,a,GAfCQ,aC4CZC,G,wDAtCX,aAAc,IAAD,8BACL,gBAaRC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAC9B,YAAakC,EAAMC,OAAOC,SAbrC,EAAKX,MAAM,CACPZ,OAAO,GACPb,YAAY,IAJX,E,qDAQb,WAAqB,IAAD,OAChBqC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAEjB,OAAQ4B,S,oBAO5C,WACI,MAA6BZ,KAAKJ,MAA3BZ,EAAP,EAAOA,OAAOb,EAAd,EAAcA,YACR0C,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS9C,EAAY6C,kBAEzD,OAA0B,KAAlBhC,EAAOkC,OACX,iDAEI,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wCACA,cAAC,EAAD,CAAWD,aAAc4B,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAUpB,OAAQ6B,e,GAhCpBX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACW,cAAC,EAAD,IACCC,SAASC,eAAe,SAM7CX,M","file":"static/js/main.356199fc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield,searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input \r\n        onChange={searchChange}\r\n        className='pa3 ba b--green bg-lightest-grey'\r\n        type='search' \r\n        placeholder='Search Robots'\r\n        \r\n        />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Card =({name,email,id})=> {\r\n    return(\r\n        <div className='dib pa2 br3 tc ma2 bw db-1 grow bg-light-blue' >\r\n            <img \r\n             className=\"ma2\"\r\n             alt='robots' \r\n             src={`https://robohash.org/ ${id} test?200x200`}\r\n            />  \r\n            <h5>{name}</h5>\r\n            <h6>{email}</h6>\r\n        </div>         \r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList= ({robots}) =>{\r\n    return(\r\n        <div className=''>{\r\n            robots.map((user,i)=> {\r\n                return( \r\n                    <Card key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                     );\r\n    })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll' , border: '5px solid black' ,height:'800px'}}>\r\n        {props.children}\r\n        </div>\r\n        ) \r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return<h1>Oooooops,This is not good for your Health.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\nexport default ErrorBoundry;","import React,{Component} from \"react\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n            super()\r\n            this.state={\r\n                robots:[],\r\n                searchfield:''\r\n                }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => {this.setState({ robots: users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length === 0 ?\r\n            <h1>Loading Results</h1>:\r\n            (\r\n                <div className='tc'> \r\n                    <h1 className='f2'>Welcome to the Robo Family</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <ErrorBoundry>\r\n                        <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                        </Scroll> \r\n                    </ErrorBoundry>    \r\n                </div>\r\n            );  \r\n    }           \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n                    <App/> \n                    ,document.getElementById('root')\n                );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}